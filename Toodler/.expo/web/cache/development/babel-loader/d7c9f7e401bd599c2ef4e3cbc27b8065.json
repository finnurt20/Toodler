{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\hr\\\\\\xF6nn3\\\\Final_app\\\\Toddler\\\\Toodler\\\\Toodler\\\\src\\\\components\\\\Lister\\\\index.jsx\";\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNavigation } from 'react-navigation';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./styles\";\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      onPress = _ref.onPress,\n      style = _ref.style;\n  return React.createElement(TouchableOpacity, {\n    style: [styles.item, style],\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, item.name));\n};\n\nvar Lister = function Lister(_ref2) {\n  var lists = _ref2.lists,\n      navigate = _ref2.navigation.navigate;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    var backgroundColor = item.id === selectedId ? \"#ffffff\" : item.color;\n    return React.createElement(Item, {\n      item: item,\n      onPress: function onPress() {\n        return navigate('Tasks', {\n          listId: item.id\n        });\n      },\n      style: {\n        backgroundColor: backgroundColor\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, React.createElement(FlatList, {\n    data: lists,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    extraData: selectedId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default withNavigation(Lister);","map":{"version":3,"sources":["D:/hr/Ã¶nn3/Final_app/Toddler/Toodler/Toodler/src/components/Lister/index.jsx"],"names":["React","useState","PropTypes","withNavigation","styles","Item","item","onPress","style","title","name","Lister","lists","navigate","navigation","selectedId","setSelectedId","renderItem","backgroundColor","id","color","listId","container","toString"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;;;;AAEA,OAAOC,MAAP;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,OAAT,QAASA,OAAT;AAAA,MAAkBC,KAAlB,QAAkBA,KAAlB;AAAA,SACX,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE,CAACJ,MAAM,CAACE,IAAR,EAAcE,KAAd,CADT;AAEE,IAAA,OAAO,EAAED,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BH,IAAI,CAACI,IAAjC,CAHF,CADW;AAAA,CAAb;;AAQA,IAAMC,MAAM,GAAG,SAATA,MAAS,QAAwC;AAAA,MAArCC,KAAqC,SAArCA,KAAqC;AAAA,MAAhBC,QAAgB,SAA9BC,UAA8B,CAAhBD,QAAgB;;AAAA,kBACjBZ,QAAQ,CAAC,IAAD,CADS;AAAA;AAAA,MAC9Cc,UAD8C;AAAA,MAClCC,aADkC;;AAErD,MAAMC,UAAU,GAAG,SAAbA,UAAa,QAAc;AAAA,QAAXX,IAAW,SAAXA,IAAW;AAC/B,QAAMY,eAAe,GAAGZ,IAAI,CAACa,EAAL,KAAYJ,UAAZ,GAAyB,SAAzB,GAAqCT,IAAI,CAACc,KAAlE;AAEF,WACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEd,IADR;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMO,QAAQ,CAAC,OAAD,EAAU;AAAEQ,UAAAA,MAAM,EAAEf,IAAI,CAACa;AAAf,SAAV,CAAd;AAAA,OAFX;AAGE,MAAA,KAAK,EAAE;AAAED,QAAAA,eAAe,EAAfA;AAAF,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOC,GAVD;;AAWA,SACA,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEd,MAAM,CAACkB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEV,KADR;AAEE,IAAA,UAAU,EAAEK,UAFd;AAGE,IAAA,YAAY,EAAE,sBAACX,IAAD;AAAA,aAAUA,IAAI,CAACa,EAAL,CAAQI,QAAR,EAAV;AAAA,KAHhB;AAIE,IAAA,SAAS,EAAER,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA;AAUD,CAvBD;;AAyBA,eAAeZ,cAAc,CAACQ,MAAD,CAA7B","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withNavigation } from 'react-navigation';\r\nimport { View, FlatList, Text, SafeAreaView, TouchableOpacity } from 'react-native';\r\nimport styles from './styles';\r\n\r\n\r\nconst Item = ({ item, onPress, style}) => (\r\n  <TouchableOpacity\r\n    style={[styles.item, style]}\r\n    onPress={onPress}>\r\n    <Text style={styles.title}>{item.name}</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst Lister = ({ lists, navigation: { navigate }}) => {\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const renderItem = ({ item }) => {\r\n    const backgroundColor = item.id === selectedId ? \"#ffffff\" : item.color;\r\n\r\n  return (\r\n    <Item\r\n      item={item}\r\n      onPress={() => navigate('Tasks', { listId: item.id })}\r\n      style={{ backgroundColor }}\r\n    />\r\n    );\r\n  }\r\n  return (\r\n  <SafeAreaView style={styles.container}>\r\n    <FlatList\r\n      data={lists}\r\n      renderItem={renderItem}\r\n      keyExtractor={(item) => item.id.toString()}\r\n      extraData={selectedId}\r\n    />\r\n  </SafeAreaView>\r\n);\r\n};\r\n\r\nexport default withNavigation(Lister);\r\n"]},"metadata":{},"sourceType":"module"}