{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\hr\\\\\\xF6nn3\\\\Final_app\\\\Toddler\\\\Toodler\\\\Toodler\\\\src\\\\components\\\\BoardList\\\\index.jsx\";\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNavigation } from 'react-navigation';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageThumbnail from \"../ImageThumbnail\";\nimport styles from \"./styles\";\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      navigate = _ref.navigation.navigate;\n  return React.createElement(TouchableOpacity, {\n    style: [styles.item, style],\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, item.name), React.createElement(ImageThumbnail, {\n    id: item.id,\n    name: item.name,\n    thumbnailPhoto: item.thumbnailPhoto,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar BoardList = function BoardList(_ref2) {\n  var boards = _ref2.boards;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    var backgroundColor = item.id === selectedId ? \"#5a57ff\" : \"#a7a6ff\";\n    return React.createElement(Item, {\n      item: item,\n      onPress: function onPress() {\n        return navigate('ListTasks');\n      },\n      style: {\n        backgroundColor: backgroundColor\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, React.createElement(FlatList, {\n    data: boards,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    extraData: selectedId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default withNavigation(BoardList);","map":{"version":3,"sources":["D:/hr/Ã¶nn3/Final_app/Toddler/Toodler/Toodler/src/components/BoardList/index.jsx"],"names":["React","useState","PropTypes","withNavigation","ImageThumbnail","styles","Item","item","onPress","style","navigate","navigation","title","name","id","thumbnailPhoto","BoardList","boards","selectedId","setSelectedId","renderItem","backgroundColor","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;;;;AAEA,OAAOC,cAAP;AACA,OAAOC,MAAP;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,OAAT,QAASA,OAAT;AAAA,MAAkBC,KAAlB,QAAkBA,KAAlB;AAAA,MAAuCC,QAAvC,QAAyBC,UAAzB,CAAuCD,QAAvC;AAAA,SACX,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,CAACL,MAAM,CAACE,IAAR,EAAcE,KAAd,CAAzB;AACE,IAAA,OAAO,EAAED,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACO,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BL,IAAI,CAACM,IAAjC,CAFF,EAGE,oBAAC,cAAD;AACI,IAAA,EAAE,EAAEN,IAAI,CAACO,EADb;AAEI,IAAA,IAAI,EAAEP,IAAI,CAACM,IAFf;AAGI,IAAA,cAAc,EAAEN,IAAI,CAACQ,cAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADW;AAAA,CAAb;;AAWA,IAAMC,SAAS,GAAG,SAAZA,SAAY,QAAgB;AAAA,MAAbC,MAAa,SAAbA,MAAa;;AAAA,kBACIhB,QAAQ,CAAC,IAAD,CADZ;AAAA;AAAA,MACzBiB,UADyB;AAAA,MACbC,aADa;;AAEhC,MAAMC,UAAU,GAAG,SAAbA,UAAa,QAAc;AAAA,QAAXb,IAAW,SAAXA,IAAW;AAC/B,QAAMc,eAAe,GAAGd,IAAI,CAACO,EAAL,KAAYI,UAAZ,GAAyB,SAAzB,GAAqC,SAA7D;AAEF,WACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEX,IADR;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMG,QAAQ,CAAC,WAAD,CAAd;AAAA,OAFX;AAGE,MAAA,KAAK,EAAE;AAAEW,QAAAA,eAAe,EAAfA;AAAF,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOC,GAVD;;AAWA,SACA,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEhB,MAAM,CAACiB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEL,MADR;AAEE,IAAA,UAAU,EAAEG,UAFd;AAGE,IAAA,YAAY,EAAE,sBAACb,IAAD;AAAA,aAAUA,IAAI,CAACO,EAAf;AAAA,KAHhB;AAIE,IAAA,SAAS,EAAEI,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA;AAUD,CAvBD;;AAyBA,eAAef,cAAc,CAACa,SAAD,CAA7B","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withNavigation } from 'react-navigation';\r\nimport { View, FlatList, Text, SafeAreaView, TouchableOpacity } from 'react-native';\r\nimport ImageThumbnail from '../ImageThumbnail';\r\nimport styles from './styles';\r\n\r\n\r\n\r\nconst Item = ({ item, onPress, style, navigation: { navigate }}) => (\r\n  <TouchableOpacity style={[styles.item, style]}\r\n    onPress={onPress}>\r\n    <Text style={styles.title}>{item.name}</Text>\r\n    <ImageThumbnail\r\n        id={item.id}\r\n        name={item.name}\r\n        thumbnailPhoto={item.thumbnailPhoto}/>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst BoardList = ({ boards }) => {\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const renderItem = ({ item }) => {\r\n    const backgroundColor = item.id === selectedId ? \"#5a57ff\" : \"#a7a6ff\";\r\n\r\n  return (\r\n    <Item\r\n      item={item}\r\n      onPress={() => navigate('ListTasks')}\r\n      style={{ backgroundColor }}\r\n    />\r\n    );\r\n  }\r\n  return (\r\n  <SafeAreaView style={styles.container}>\r\n    <FlatList\r\n      data={boards}\r\n      renderItem={renderItem}\r\n      keyExtractor={(item) => item.id}\r\n      extraData={selectedId}\r\n    />\r\n  </SafeAreaView>\r\n);\r\n};\r\n\r\nexport default withNavigation(BoardList);\r\n"]},"metadata":{},"sourceType":"module"}